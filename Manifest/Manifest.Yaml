#templates/secrets.yaml

apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: {{ .Values.namespace }}
type: Opaque
data:
  MYSQL_ROOT_PASSWORD: {{ .Values.mysql.rootPassword | b64enc }}

#templates/configmap.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: {{ .Values.namespace }}
data:
  MYSQL_DATABASE: {{ .Values.mysql.database | quote }}

#templates/mysql/deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: {{ .Values.namespace }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: {{ .Values.mysql.image }}
          resources:
            {{- toYaml .Values.mysql.resources | nindent 12 }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: MYSQL_DATABASE
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-data
          livenessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command: ["mysqladmin", "ping", "-h", "127.0.0.1"]
            initialDelaySeconds: 30
            periodSeconds: 10
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-pvc

#templates/mysql/service.yaml

apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: mysql
  ports:
    - port: 3306
      targetPort: 3306

#templates/mysql/pvc.yaml

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ebs-sc
  resources:
    requests:
      storage: {{ .Values.mysql.pvcSize }}

#templates/bankapp/deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: bankapp
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.bankapp.replicas }}
  selector:
    matchLabels:
      app: bankapp
  template:
    metadata:
      labels:
        app: bankapp
    spec:
      containers:
        - name: bankapp
          image: {{ .Values.bankapp.image }}
          resources:
            {{- toYaml .Values.bankapp.resources | nindent 12 }}
          ports:
            - containerPort: 8000
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://mysql-service:3306/{{ .Values.mysql.database }}?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
            - name: SPRING_DATASOURCE_USERNAME
              value: root
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_ROOT_PASSWORD
          livenessProbe:
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10

#templates/bankapp/service.yaml

apiVersion: v1
kind: Service
metadata:
  name: bankapp-service
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  selector:
    app: bankapp
  ports:
    - port: 80
      targetPort: 8000
